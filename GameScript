-- GameScript

local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "GameScript By CludeHub/Paul", HidePremium = true})

local HomeTab = Window:MakeTab({
    Name = "Home",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

HomeTab:AddButton({
    Name = "Shader",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CludeHub/GameScript/main/Shader"))()
    end
})

HomeTab:AddButton({
    Name = "infinite yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

HomeTab:AddButton({
    Name = "rejoin",
    Callback = function()
        game.Players.LocalPlayer:Kick("Rejoining...")
        wait(1)
        game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
    end
})

local ZombieAttackTab = Window:MakeTab({
    Name = "Zombie Attack",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ZombieAttackTab:AddButton({
    Name = "HitBox",
    Callback = function()
        _G.HeadSize = 9
        local enemies = workspace.enemies
        while wait() do
            for _,v in next, enemies:GetChildren() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        v.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
                        v.HumanoidRootPart.Material = "Neon"
                        v.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
                        v.HumanoidRootPart.Transparency = 0.7
                        v.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        end
    end
})

ZombieAttackTab:AddButton({
    Name = "Silent Aim",
    Callback = function()
        local uis = game:GetService("UserInputService")
        local cam = game:GetService("Workspace").CurrentCamera
        local ts = game:GetService("TweenService")
        local plr = game:GetService("Players").LocalPlayer

        local function isBehindWall(player)
            local ray = Ray.new(cam.CFrame.Position, player.Head.Position - cam.CFrame.Position)
            local hit = game.GetService(game, "Workspace").FindPartOnRayWithWhitelist(game.GetService(game, "Workspace"), ray, {game.GetService(game, "Workspace").enemies})
            if hit and hit.Parent == player then
                return false
            end
            return true
        end

        local function getClosest()
            local closestDist = math.huge
            local closestPlr = nil
            for _, v in next, game.GetService(game, "Workspace").enemies.GetChildren(game.GetService(game, "Workspace").enemies) do
                if game.FindFirstChild(v, "Humanoid") and v.Humanoid.Health > 0 then
                    local vector, onScreen = cam.worldToScreenPoint(cam, game.WaitForChild(v, "Head", math.huge).Position)
                    local dist = (Vector2.new(uis.GetMouseLocation(uis).X, uis.GetMouseLocation(uis).Y) - Vector2.new(vector.X, vector.Y)).Magnitude
                    if dist < closestDist and onScreen and not isBehindWall(v) then
                        closestDist = dist
                        closestPlr = v
                    end
                end
            end
            return closestPlr
        end

        local namecall;
        namecall = hookmetamethod(game, "__namecall", function(Self, ...)
            if not checkcaller() and tostring(getcallingscript()) == "GunController" and string.lower(getnamecallmethod()) == "findpartonraywithwhitelist" then
                local args = {...}
                local closest = getClosest()
                if closest then
                    local origin = args[1].Origin
                    args[1] = Ray.new(origin, closest.Head.Position - origin)
                end
                return namecall(Self, unpack(args))
            end
            return namecall(Self, ...)
        end)
    end
})

ZombieAttackTab:AddTextbox({
    Name = "Player Speed",
    Default = "16",
    TextDisappear = true,
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(value)
    end
})

ZombieAttackTab:AddTextbox({
    Name = "Player Jump",
    Default = "50",
    TextDisappear = true,
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(value)
    end
})

local BladeAllTab = Window:MakeTab({
    Name = "Blade All",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

BladeAllTab:AddButton({
    Name = "Auto Parry",
    Callback = function()
        local Debug = false -- Set this to true if you want my debug output.
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9) -- A second argument in waitforchild what could it mean?
local Balls = workspace:WaitForChild("Balls", 9e9)

-- Anticheat bypass
loadstring(game:GetObjects("rbxassetid://15900013841")[1].Source)()

-- Functions

local function print(...) -- Debug print.
    if Debug then
        warn(...)
    end
end

local function VerifyBall(Ball) -- Returns nil if the ball isn't a valid projectile; true if it's the right ball.
    if typeof(Ball) == "Instance" and Ball:IsA("BasePart") and Ball:IsDescendantOf(Balls) and Ball:GetAttribute("realBall") == true then
        return true
    end
end

local function IsTarget() -- Returns true if we are the current target.
    return (Player.Character and Player.Character:FindFirstChild("Highlight"))
end

local function Parry() -- Parries.
    Remotes:WaitForChild("ParryButtonPress"):Fire()
end

-- The actual code

Balls.ChildAdded:Connect(function(Ball)
    if not VerifyBall(Ball) then
        return
    end
    
    print(`Ball Spawned: {Ball}`)
    
    local OldPosition = Ball.Position
    local OldTick = tick()
    
    Ball:GetPropertyChangedSignal("Position"):Connect(function()
        if IsTarget() then -- No need to do the math if we're not being attacked.
            local Distance = (Ball.Position - workspace.CurrentCamera.Focus.Position).Magnitude
            local Velocity = (OldPosition - Ball.Position).Magnitude -- Fix for .Velocity not working. Yes I got the lowest possible grade in accuplacer math.
            
            print(`Distance: {Distance}\nVelocity: {Velocity}\nTime: {Distance / Velocity}`)
        
            if (Distance / Velocity) <= 10 then -- Sorry for the magic number. This just works. No, you don't get a slider for this because it's 2am.
                Parry()
            end
        end
        
        if (tick() - OldTick >= 1/60) then -- Don't want it to update too quickly because my velocity implementation is aids. Yes, I tried Ball.Velocity. No, it didn't work.
            OldTick = tick()
            OldPosition = Ball.Position
        end
    end)
end)
    end
})

BladeAllTab:AddButton({
    Name = "Manual Spam",
    Callback = function()
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false 
gui.Parent = game.CoreGui 

local frame = Instance.new("Frame")
frame.Position = UDim2.new(0, 300, 0, -50)
frame.Size = UDim2.new(0, 160, 0, 75)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BorderColor3 = Color3.new(0, 0, 255)
frame.BorderSizePixel = 1
frame.Parent = gui

local button = Instance.new("TextButton")
button.Text = "ON"
button.Size = UDim2.new(1, -20, 1, -20)
button.Position = UDim2.new(0, 10, 0, 10)
button.BackgroundColor3 = Color3.new(1, 1, 1)
button.BorderColor3 = Color3.new(0, 0, 255)
button.BorderSizePixel = 2
button.Font = Enum.Font.SourceSans
button.TextColor3 = Color3.new(0, 0, 0)
button.TextSize = 16
button.Parent = frame

local activated = false

local function toggle()
    activated = not activated
    button.Text = activated and "OFF" or "ON"
    
    while activated do
        local args = {
            [1] = 1.5,
            [2] = CFrame.new(-254.2939910888672, 112.13581848144531, -119.27256774902344) * CFrame.Angles(-2.029526710510254, 0.5662040710449219, 2.314905881881714),
            [3] = {
                ["2617721424"] = Vector3.new(-273.400146484375, -724.8031005859375, -20.92414093017578),
                
            },
            [4] = {
                [1] = 910,
                [2] = 154
            }
        }

        game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))
        game:GetService("RunService").Heartbeat:Wait()
    end
end

button.MouseButton1Click:Connect(toggle)
    end
})

BladeAllTab:AddTextbox({
    Name = "Player Speed",
    Default = "16",
    TextDisappear = true,
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(value)
    end
})

BladeAllTab:AddTextbox({
    Name = "Player Jump",
    Default = "50",
    TextDisappear = true,
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(value)
    end
})

local SpeedTab = Window:MakeTab({
	Name = "Legend of Speed",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

SpeedTab:AddButton({
	Name = "Blue Orb",
	Callback = function()
      		print("button pressed")
  	end    
})

SpeedTab:AddButton({
	Name = "red Orb",
	Callback = function()
      		print("button pressed")
  	end    
})

SpeedTab:AddButton({
	Name = "yellow Orb",
	Callback = function()
      		print("button pressed")
  	end    
})

SpeedTab:AddButton({
	Name = "gem farm",
	Callback = function()
      		print("button pressed")
  	end    
})
local Section = Tab:AddSection({
	Name = "Teleports"
})
